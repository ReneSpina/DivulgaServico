@model IEnumerable<DIVULGA_SERVICOS.Models.CAD_PES_JURIDICA>


@{
    //Layout = null;
    var endereco = ViewData["DadosEndereco"] as IEnumerable<DIVULGA_SERVICOS.Models.CAD_PES_ENDERECO>;
    //var distancia = ViewData["DadosDistancia"];
    var count = endereco.LongCount();
    var i = 1;
}

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
    <meta charset="utf-8">
    <title>Busca Serviço</title>
    <style>
        .jumbotron{
            background-color: inherit;
        }
    </style>
    <script>
        var posicaoatual;
        var markers=new Array();
    </script>
</head>
<body>
    <div class="container">
        <div class="jumbotron">
            <div class="row-fluid">
                <div class="span2" id="lista">
                </div>
                <div id="map">

                </div>
            </div>
        </div>

        <p>Teste</p>
        <div>
            @if(ViewBag.DadosDistancia != null)
            {
                @ViewBag.DadosDistancia[1];
            }
        </div>


    </div>
    <script>
        // The following example creates complex markers to indicate beaches near
        // Sydney, NSW, Australia. Note that the anchor is set to (0,32) to correspond
        // to the base of the flagpole.
        function initMap() {
            map = new google.maps.Map(document.getElementById('map'), {
                zoom: 14,
                center: { lat: -15.7217174, lng: -48.0783226 }
            });
            setMarkers(map);
        }

        // Data for the markers consisting of a name, a LatLng and a zIndex for the
        // order in which these markers should display on top of each other.

        //var beaches = [
        //  ['Bondi Beach', -33.890542, 151.274856, 4],
        //  ['Coogee Beach', -33.923036, 151.259052, 5],
        //  ['Cronulla Beach', -34.028249, 151.157507, 3],
        //  ['Manly Beach', -33.80010128657071, 151.28747820854187, 2],
        //  ['Maroubra Beach', -33.950198, 151.259302, 1]
        //];

        function setMarkers(map) {
            // Adds markers to the map.

            // Marker sizes are expressed as a Size of X,Y where the origin of the image
            // (0,0) is located in the top left of the image.

            // Origins, anchor positions and coordinates of the marker increase in the X
            // direction to the right and in the Y direction down.
            var image2 = {
                url: '/Imagens/Pointer-You.png',
                // This marker is 20 pixels wide by 32 pixels high.
                scaledSize: new google.maps.Size(45, 45),
                // The origin for this image is (0, 0).
                origin: new google.maps.Point(0, 0),
                // The anchor for this image is the base of the flagpole at (0, 32).
                anchor: new google.maps.Point(0, 32)
            };

            var image1 = {
                url: '/Imagens/place-128.png',
                // This marker is 20 pixels wide by 32 pixels high.
                scaledSize: new google.maps.Size(32, 32),
                // The origin for this image is (0, 0).
                origin: new google.maps.Point(0, 0),
                // The anchor for this image is the base of the flagpole at (0, 32).
                anchor: new google.maps.Point(0, 32)
            };
            // Shapes define the clickable region of the icon. The type defines an HTML
            // <area> element 'poly' which traces out a polygon as a series of X,Y points.
            // The final coordinate closes the poly by connecting to the first coordinate.
            //var shape = {
            //    coords: [1, 1, 1, 20, 18, 20, 18, 1],
            //    type: 'poly'
            //};

            var infowindow = new google.maps.InfoWindow(), marker;

            if (navigator.geolocation)
            {
                navigator.geolocation.getCurrentPosition(function(position) {
                    var pos = {
                        lat: position.coords.latitude,
                        lng: position.coords.longitude
                    };
                    //infoWindow.setPosition(pos);
                    //infoWindow.setContent('Location found.');
                    posicaoatual = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);
                    map.setCenter(pos);
                    var marker1 = new google.maps.Marker({
                        map: map,
                        icon: image2,
                        draggable: true,
                    });
                    //window.alert("Atual: "+posicaoatual);
                    marker1.setPosition(posicaoatual);
                    var infowindow = new google.maps.InfoWindow(), marker;
                    google.maps.event.addListener(marker1, 'click', (function(marker1, i) {
                        return function() {
                            infowindow.setContent("Você está aqui!");
                            infowindow.open(map, marker1);
                        }
                    })(marker1))
                    var service = new google.maps.DistanceMatrixService();
                    @foreach (var item in endereco)
                            {
                            <text>
                    var posicaoservico = new google.maps.LatLng(@item.CD_LAT, @item.CD_LONG);
                    //window.alert("Atual: "+posicaoatual+"Servico: "+posicaoservico);
                    //window.alert("geral: "+posicaoservico);
                    service.getDistanceMatrix({
                        origins: [posicaoatual],
                        destinations: [posicaoservico],
                        travelMode: google.maps.TravelMode.DRIVING,
                        unitSystem: google.maps.UnitSystem.METRIC,
                        avoidHighways: false,
                        avoidTolls: false
                    }, function (response, status) {
                        if (status == google.maps.DistanceMatrixStatus.OK && response.rows[0].elements[0].status != "ZERO_RESULTS") {
                            //window.alert("geral: @item.CD_LAT");
                            var marcarlocal = new google.maps.LatLng(@item.CD_LAT, @item.CD_LONG);
                            marker2 = new google.maps.Marker({
                                position: marcarlocal,
                                map: map,
                                icon: image1,
                                //shape: shape,
                                //title: "Teste",
                                //zIndex: beach[3]
                            });
                            var panel = document.getElementById('lista');
                            //panel.innerHTML = '';
                            var item = document.createElement("DIV");
                            var title = document.createElement("A");
                            title.href = "#";
                            title.className = "title";
                            title.innerHTML = "@item.CAD_PESSOA.DS_APELIDO_SITE";
                            item.appendChild(title);
                            panel.appendChild(item);
                            google.maps.event.addDomListener(title, 'click', (function(marker2, i) {
                                return function() {
                                    infowindow.setContent("@item.CAD_PESSOA.DS_APELIDO_SITE"+"<br>"+ distance +"<br>"+"@item.CAD_PESSOA.TF_TEL_CEL"+"<br>"+"@item.CAD_PESSOA.UserName"+"<br>");
                                    //window.alert(latlng);
                                    map.setZoom(14);
                                    infowindow.open(map, marker2);
                                }
                            })(marker2))
                            var distance = response.rows[0].elements[0].distance.text;
                            //var duration = response.rows[0].elements[0].duration.text;
                            //var dvDistance = document.getElementById("dvDistance");
                            //dvDistance.innerHTML = "";
                            //dvDistance.innerHTML += "Distance: " + distance + "<br />";
                            //dvDistance.innerHTML += "Duration:" + duration;
                            google.maps.event.addListener(marker2, 'click', (function(marker2, i) {
                                return function() {
                                    infowindow.setContent("@item.CAD_PESSOA.DS_APELIDO_SITE"+"<br>"+ distance +"<br>"+"@item.CAD_PESSOA.TF_TEL_CEL"+"<br>"+"@item.CAD_PESSOA.UserName"+"<br>");
                                    infowindow.open(map, marker2);
                                }
                            })(marker2))
                            markers.push(marker2);
                            //window.alert("1");
                            //window.alert(marker2.position);
                            //window.alert(markers[i]);
                            @if(count == i)
                            {
                                <text>
                                   var markerCluster = new MarkerClusterer(map, markers, {imagePath: 'https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m'});
                                </text>
                            }

                        } else {
                            alert("Unable to find the distance via road.");
                        }
                    });
                    </text>
                        i++;
                    }
                }, function() {
                    handleLocationError(true, infoWindow, map.getCenter());
                });
            } else {
                // Browser doesn't support Geolocation
                handleLocationError(false, infoWindow, map.getCenter());
            }
        }
            </script>
            <script src="https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/markerclusterer.js"></script>
            <script async defer
                    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyB6lb1sCgZqE0v4a8A-G9lNTlnHLajSnY4&signed_in=true&callback=initMap"></script>
</body>
</html>

@*@foreach (var item in ViewData["DadosEndereco"] as IEnumerable<DIVULGA_SERVICOS.Models.CAD_PES_ENDERECO>)
{
}*@